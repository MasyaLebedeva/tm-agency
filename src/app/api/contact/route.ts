import { NextRequest, NextResponse } from 'next/server'
import nodemailer from 'nodemailer'

export async function POST(request: NextRequest) {
  try {
    const { name, contact, messenger, message, timestamp } = await request.json()

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞—Ä–æ–ª—è email
    if (!process.env.EMAIL_PASSWORD || process.env.EMAIL_PASSWORD === 'your_gmail_app_password_here') {
      console.log('Email –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –ª–æ–≥')
      
      // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('=== –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê ===')
      console.log(`–ò–º—è: ${name}`)
      console.log(`–ö–æ–Ω—Ç–∞–∫—Ç: ${contact}`)
      console.log(`–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä: ${messenger}`)
      console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${message}`)
      console.log(`–í—Ä–µ–º—è: ${timestamp}`)
      console.log('==================')
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö, –Ω–æ –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ email
      return NextResponse.json({ 
        success: true, 
        message: '–ó–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.' 
      })
    }

    // –°–æ–∑–¥–∞–µ–º transporter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: 'masyalebedeva@gmail.com',
        pass: process.env.EMAIL_PASSWORD
      }
    })

    const mailOptions = {
      from: 'masyalebedeva@gmail.com',
      to: 'masyalebedeva@gmail.com',
      subject: `üéØ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ T&M Agency`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #2AABEE;">üéØ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê</h2>
          
          <div style="background: #f5f5f5; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <p><strong>üë§ –ò–º—è:</strong> ${name}</p>
            <p><strong>üì± –ö–æ–Ω—Ç–∞–∫—Ç:</strong> ${contact}</p>
            <p><strong>üí¨ –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä:</strong> ${messenger}</p>
            <p><strong>üìù –°–æ–æ–±—â–µ–Ω–∏–µ:</strong> ${message}</p>
            <p><strong>‚è∞ –í—Ä–µ–º—è:</strong> ${timestamp}</p>
          </div>
          
          <p style="color: #666; font-size: 14px;">
            –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å —Å–∞–π—Ç–∞ T&M Agency
          </p>
        </div>
      `
    }

    await transporter.sendMail(mailOptions)

    return NextResponse.json({ success: true })
  } catch (error: any) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error)
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    let errorMessage = '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏'
    
    if (error.code === 'EAUTH') {
      errorMessage = '–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ email. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.'
    } else if (error.code === 'ECONNECTION') {
      errorMessage = '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ email —Å–µ—Ä–≤–µ—Ä—É.'
    } else if (error.message?.includes('535')) {
      errorMessage = '–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ email. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'
    }
    
    return NextResponse.json({ error: errorMessage }, { status: 500 })
  }
}
